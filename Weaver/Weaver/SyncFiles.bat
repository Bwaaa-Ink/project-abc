@echo off
pushd "%~dp0"

rem --- copy framework files into Fody project
copy /Y "TrixxInjection.Framework\Enums.cs"        "TrixxInjection.Fody\AUTOGENERATED_Enums.g.cs"
copy /Y "TrixxInjection.Framework\Configurator.cs"  "TrixxInjection.Fody\AUTOGENERATED_Configurator.g.cs"
copy /Y "TrixxInjection.Framework\Writer.cs"  "TrixxInjection.Fody\AUTOGENERATED_Writer.g.cs"

setlocal EnableDelayedExpansion

rem --- set source & destination
set "srcRel=TrixxInjection.Framework\Markers.cs"
set "src=%~dp0%srcRel%"
set "dst=TrixxInjection.Fody\AttributeProcessing\AUTOGENERATED_AttributeProcessors.g.cs"

echo Looking for file: "%src%"
if not exist "%src%" (
  echo ERROR: Source file not found.
  popd & exit /b 1
)

rem --- extract just the class names into a temp file
powershell -NoProfile -Command ^
  "$pattern='class\s+(\w+)\s*:\s*Attribute';" ^
  "Select-String -Path '%src%' -Pattern $pattern |" ^
  "ForEach-Object { $_.Matches.Groups[1].Value }" > "%~dp0classes.tmp"

if %ERRORLEVEL% neq 0 (
  echo ERROR: PowerShell extraction failed.
  del "%~dp0classes.tmp" 2>nul
  popd & exit /b 1
)

rem --- generate the AttributeProcessors file
>"%dst%" (
  echo using Mono.Cecil;
  echo namespace TrixxInjection.Fody
  echo {
  echo     internal static partial class AttributeProcessors
  echo     {
)

for /f "usebackq delims=" %%A in ("%~dp0classes.tmp") do (
  >>"%dst%" echo         static partial void %%A^(CustomAttribute attribute, TypeDefinition type^);
)

>>"%dst%" (
  echo     }
  echo }
)

rem --- clean up
del "%~dp0classes.tmp"
endlocal
popd
